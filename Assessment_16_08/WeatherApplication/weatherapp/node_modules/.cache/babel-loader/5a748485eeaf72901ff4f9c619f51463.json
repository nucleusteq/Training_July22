{"ast":null,"code":"var _jsxFileName = \"C:\\\\UI UX\\\\WeatherApplication\\\\weatherapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"41702bc97d99d9974946b4296d7b7c77\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery(\"\");\n      });\n    }\n  };\n\n  const datebuilder = d => {\n    let months = [\"Junary\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: typeof weather.main != \"undefined\" ? weather.main.temp > 30 ? weather.main.temp < 15 ? \"app cold\" : \"app warm\" : \"app warm\" : \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-bar\",\n            placeholder: \"Search..\",\n            onChange: e => setQuery(e.target.value),\n            value: query,\n            onKeyPress: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location\",\n              children: [weather.name, \",\", weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: datebuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [Math.round(weather.main.temp), \"\\xB0c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather\",\n              children: weather.weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GVng0aXCH4yLtaeOWbs04pRRVUQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","datebuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round"],"sources":["C:/UI UX/WeatherApplication/weatherapp/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nconst api = {\n  key: \"41702bc97d99d9974946b4296d7b7c77\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n        });\n    }\n  };\n  const datebuilder = (d) => {\n    let months = [\n      \"Junary\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n  return (\n    <div className=\"container\">\n    <div className={typeof weather.main != \"undefined\" ? weather.main.temp>30 ? ( weather.main.temp <15 ? \"app cold\":\"app warm\"): \"app warm\": \"app\"}>\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search..\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            \n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name},{weather.sys.country}\n              </div>\n              <div className=\"date\">{datebuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}Â°c</div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </main>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}